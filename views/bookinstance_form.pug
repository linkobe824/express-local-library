extends layout 

block content 
  h1=title

  form(method='POST', action='')
    div.form-group 
      label(for='book') Book: 
      select#book.form-control(type='select', required='true'
      placeholder='Select Book', name='book')
        -
          book_list.sort((a,b) => {
            let textA = a.title.toUpperCase()
            let textB = b.title.toUpperCase()

            return textA.localeCompare(textB, 'en', { sensitivity: 'base'})
          })
        
        for book in book_list 
          option(value=book.id,
          selected=(selected_book==book._id.toString() ? 'selected': false)) #{book.title}
    
    div.form-group 
      label(for='imprint') Imprint: 
      input#imprint.form-control(type='text', required='true',
      placeholder='Publisher and date information', name='imprint',
      value=(undefined===bookinstance ? '' : bookinstance.imprint))
    
    div.form-group 
      label(for='due_back') Date when book available: 
      input#due_back.form-control(type='date', name='due_back',
      value=(undefined===bookinstance ? '' : bookinstance.due_back_yyyy_mm_dd))

    div.form-group 
      label(for='status') Status: 
      select#status.form-control(type='select', required='true',
      placeholde='Select status', name='status')
        option(value='Maintenance'
        selected=(undefined === bookinstance || bookinstance.status!='Maintenance'
        ? false : 'selected')) Maintenance

        option(value='Available'
        selected=(undefined === bookinstance || bookinstance.status!='Available'
        ? false : 'selected')) Available 

        option(value='Loaned'
        selected=(undefined === bookinstance || bookinstance.status!='Loaned'
        ? false : 'selected')) Loaned 

        option(value='Reserved'
        selected=(undefined === bookinstance || bookinstance.status!='Reserved'
        ? false : 'selected')) Reserved
    
    button.btn.btn-primary(type='submit') Submit

    if errors 
      ul 
        for error in errors 
         li!= error.msg


      